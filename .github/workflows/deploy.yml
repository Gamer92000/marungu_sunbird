name: Deploy

on:
  push:
    tags:
      - "v*.*.*" # Trigger this workflow for tags like v1.0.0
    branches:
      - "*" # Also trigger this workflow for all branches
  pull_request: # This will trigger the workflow for pull requests

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    # only run on pull requests
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Cargo
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Run clippy
        uses: giraffate/clippy-action@v1
        with:
          reporter: github-pr-review
          github_token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Cargo
        uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies
        run: cargo fetch --locked
      - name: Try to build
        run: cargo build --locked --all-targets

  version:
    name: Set Version Number
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v') # Only run this job for semver tags
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set version number
        run: |
          sed -i "3 s/version = \"\([0-9]*\.[0-9]*\.[0-9]*\)\"/version = \"${GITHUB_REF#refs/tags/v}\"/" Cargo.toml

      - name: Commit version number
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore(version): bump version to ${GITHUB_REF#refs/tags/v}"
          file_pattern: Cargo.toml

  build:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    if: "${{ contains(github.event.head_commit.message, 'chore(version): bump version to') }}"
    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Version
        id: extract_version
        run: |
          echo ::set-output name=VERSION::${cat Cargo.toml | grep version | head -1 | cut -d '"' -f 2}

      - name: Build image and push to GHCR
        uses: docker/build-push-action@v5
        with:
          tags: |
            ghcr.io/gamer92000/marungusunbird:${{ github.sha }}
            ghcr.io/gamer92000/marungusunbird:${{ steps.extract_version.outputs.VERSION }}
            ghcr.io/gamer92000/marungusunbird:latest
